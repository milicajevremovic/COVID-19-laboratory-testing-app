/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.termin;

import kontroler.Kontroler;
import domen.Laborant;
import domen.TerminTestiranja;
import domen.Test;
import java.awt.Color;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.text.ParseException;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Milica
 */
public class TerminForma extends javax.swing.JDialog {

    private boolean inicijalizovana;

    /**
     * Creates new form FrmExam
     */
    public TerminForma(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        srediFormu();
        popuniKomboTestova();
        popuniKomboLaboranata();
        setTitle("Zakazivanje termina za testiranje na određeni test");
        setLocationRelativeTo(null);
        inicijalizovana = true;
        lblNemaLaboranata.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtDatum = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbLaboranti = new javax.swing.JComboBox<>();
        cbTestovi = new javax.swing.JComboBox<>();
        btnSacuvajTermin = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();
        lblNemaLaboranata = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Termin za određeni test:  ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 24))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Datum: (dd.mm.gggg.)");

        txtDatum.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDatum.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Laborant koji će vršiti testiranje:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Test koji ce se vrsiši u odredjenom terminu:");

        cbLaboranti.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbLaboranti.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbLaboranti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLaborantiActionPerformed(evt);
            }
        });

        cbTestovi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbTestovi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbTestovi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTestoviActionPerformed(evt);
            }
        });

        btnSacuvajTermin.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSacuvajTermin.setText("Zakaži termin");
        btnSacuvajTermin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajTerminActionPerformed(evt);
            }
        });

        lblNemaLaboranata.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblNemaLaboranata.setForeground(new java.awt.Color(255, 0, 0));
        lblNemaLaboranata.setText("Trenutno nema laboranata za izabrani test!");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSacuvajTermin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(cbTestovi, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNemaLaboranata)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblError, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cbLaboranti, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtDatum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(cbTestovi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(cbLaboranti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblNemaLaboranata)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(btnSacuvajTermin, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName("Termin testiranja za određeni test:  ");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajTerminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajTerminActionPerformed
        try {
            if (txtDatum.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Morate popuniti sva polja!");
                return;
            }
            Date datum = null;
            try {
                datum = Kontroler.getInstance().getSdf().parse(txtDatum.getText().trim());
                lblError.setText("");
            } catch (ParseException ex) {
                Logger.getLogger(TerminForma.class.getName()).log(Level.SEVERE, null, ex);
                lblError.setForeground(Color.red);
                lblError.setText("Unesite datum u formatu dd.mm.gggg");
                return;
            }
            Laborant la = (Laborant) cbLaboranti.getSelectedItem();
            Test test = (Test) cbTestovi.getSelectedItem();

            TerminTestiranja t = new TerminTestiranja(Long.MAX_VALUE, datum, la, test);
            Kontroler.getInstance().sacuvajTerminTestiranja(t);
            int option = JOptionPane.showConfirmDialog(this, "Termin je uspešno zakazan! Da li želite da zakazete jos neki termin?", "", JOptionPane.YES_NO_OPTION);
            if (option == JOptionPane.YES_OPTION) {
                txtDatum.setText("");
            } else {
                this.dispose();
            }
        } catch (Exception ex) {
            Logger.getLogger(TerminForma.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnSacuvajTerminActionPerformed

    private void cbLaborantiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLaborantiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbLaborantiActionPerformed

    private void cbTestoviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTestoviActionPerformed
        lblNemaLaboranata.setVisible(false);
        System.out.println("event cbTest: init="+inicijalizovana);
        if (inicijalizovana) {
            filtrirajComboLaboranata();
        }
    }//GEN-LAST:event_cbTestoviActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSacuvajTermin;
    private javax.swing.JComboBox<Object> cbLaboranti;
    private javax.swing.JComboBox<Object> cbTestovi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblNemaLaboranata;
    private javax.swing.JTextField txtDatum;
    // End of variables declaration//GEN-END:variables

    private void popuniKomboLaboranata() {
        cbLaboranti.removeAllItems();
        try {
            List<Laborant> list = Kontroler.getInstance().dajSveLaborante();
            for (Laborant l : list) {
                cbLaboranti.addItem(l);
            }
        } catch (Exception ex) {
            Logger.getLogger(RezultatForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniKomboTestova() {
        cbTestovi.removeAllItems();
        try {
            List<Test> list = Kontroler.getInstance().dajSveTestove();
            for (Test t : list) {
                cbTestovi.addItem(t);
            }
        } catch (Exception ex) {
            Logger.getLogger(RezultatForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void srediFormu() {
        txtDatum.setForeground(Color.GRAY);
        txtDatum.setText("Na primer 28.10.2020");
        txtDatum.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (txtDatum.getText().equals("Na primer 28.10.2020")) {
                    txtDatum.setText("");
                    txtDatum.setForeground(Color.BLACK);
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (txtDatum.getText().isEmpty()) {
                    txtDatum.setForeground(Color.GRAY);
                    txtDatum.setText("Na primer 28.10.2020");
                }
            }
        });
    }

    private void filtrirajComboLaboranata() {
        cbLaboranti.removeAllItems();
        try {
            Test test = (Test) cbTestovi.getSelectedItem();
            System.out.println(test);
            System.out.println(test.getTestID());
            List<Laborant> list = Kontroler.getInstance().dajSveLaborante();
            for (Laborant l : list) {
                System.out.println(l);
                System.out.println(l.getTest().getTestID());                
                if (l.getTest().equals(test)) {
                    cbLaboranti.addItem(l);
                }
            }
            System.out.println(cbLaboranti.getItemCount());
            if (cbLaboranti.getItemCount() == 0) {
                lblNemaLaboranata.setVisible(true);
            }
        } catch (Exception ex) {
            Logger.getLogger(RezultatForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
